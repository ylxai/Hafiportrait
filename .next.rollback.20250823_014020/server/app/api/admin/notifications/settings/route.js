"use strict";(()=>{var e={};e.id=9140,e.ids=[9140],e.modules={20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},19908:(e,t,n)=>{n.r(t),n.d(t,{originalPathname:()=>m,patchFetch:()=>x,requestAsyncStorage:()=>l,routeModule:()=>p,serverHooks:()=>f,staticGenerationAsyncStorage:()=>g});var s={};n.r(s),n.d(s,{GET:()=>c,POST:()=>d});var i=n(30633),o=n(86488),r=n(13342),a=n(90223);let u={uploadSuccess:!0,uploadFailed:!0,cameraDisconnected:!0,storageWarning:!0,eventMilestone:!0,clientNotifications:!0,soundEnabled:!0,vibrationEnabled:!0,quietHours:{enabled:!1,start:"22:00",end:"08:00"}};async function c(){try{return a.NextResponse.json({success:!0,...u})}catch(e){return console.error("Error getting notification settings:",e),a.NextResponse.json({success:!1,error:"Failed to get notification settings"},{status:500})}}async function d(e){try{let t=await e.json();return u={...u,...t},console.log("âœ… Notification settings updated:",u),a.NextResponse.json({success:!0,message:"Notification settings updated successfully",...u})}catch(e){return console.error("Error updating notification settings:",e),a.NextResponse.json({success:!1,error:"Failed to update notification settings"},{status:500})}}let p=new i.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/admin/notifications/settings/route",pathname:"/api/admin/notifications/settings",filename:"route",bundlePath:"app/api/admin/notifications/settings/route"},resolvedPagePath:"/home/ubuntu/stable/src/app/api/admin/notifications/settings/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:l,staticGenerationAsyncStorage:g,serverHooks:f}=p,m="/api/admin/notifications/settings/route";function x(){return(0,r.patchFetch)({serverHooks:f,staticGenerationAsyncStorage:g})}}};var t=require("../../../../../webpack-runtime.js");t.C(e);var n=e=>t(t.s=e),s=t.X(0,[2782,606],()=>n(19908));module.exports=s})();