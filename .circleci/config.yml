version: 2.1

# Orbs untuk mempermudah konfigurasi
orbs:
  node: circleci/node@5.1.0

# Jobs definition
jobs:
  # Job untuk testing dan linting
  test:
    docker:
      - image: cimg/node:18.17
    working_directory: ~/hafiportrait
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: pnpm
      - run:
          name: Install pnpm
          command: |
            sudo corepack enable
            corepack prepare pnpm@latest --activate
      - run:
          name: Install dependencies
          command: pnpm install --frozen-lockfile
      - run:
          name: Lint code
          command: pnpm run lint
      - run:
          name: Environment validation
          command: pnpm run env:validate
      - run:
          name: Test database connection
          command: pnpm run test:db
      - run:
          name: Test storage connection
          command: pnpm run test:storage

  # Job untuk build aplikasi
  build:
    docker:
      - image: cimg/node:18.17
    working_directory: ~/hafiportrait
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: pnpm
      - run:
          name: Install pnpm
          command: |
            sudo corepack enable
            corepack prepare pnpm@latest --activate
      - run:
          name: Install dependencies
          command: pnpm install --frozen-lockfile
      - run:
          name: Build application
          command: pnpm run build
      - persist_to_workspace:
          root: ~/hafiportrait
          paths:
            - .next
            - node_modules
            - package.json
            - pnpm-lock.yaml

  # Job untuk build verification (no deployment)
  verify-build:
    docker:
      - image: cimg/node:20.10
    working_directory: ~/hafiportrait
    steps:
      - checkout
      - attach_workspace:
          at: ~/hafiportrait
      - run:
          name: Verify build artifacts
          command: |
            echo "🔍 Verifying build artifacts..."
            ls -la .next/
            echo "✅ Build verification completed!"
      - run:
          name: Build summary
          command: |
            echo "✅ Build completed successfully!"
            echo "📦 Ready for manual deployment"

  # Job untuk local health check (no external deployment)
  local-health-check:
    docker:
      - image: cimg/base:stable
    steps:
      - run:
          name: Health check - Local Server
          command: |
            echo "🔍 Checking local server health..."
            curl -f http://147.251.255.227:3000/api/health || echo "⚠️ Local server not running"
            echo "✅ Local health check completed"
      - run:
          name: Health check - Socket.IO Server
          command: |
            echo "🔍 Checking Socket.IO server health..."
            curl -f http://147.251.255.227:3001/health || echo "⚠️ Socket.IO server not running"
            echo "✅ Socket.IO health check completed"

  # Job untuk deployment ke production server
  deploy:
    docker:
      - image: cimg/base:stable
    working_directory: ~/hafiportrait
    steps:
      - checkout
      - attach_workspace:
          at: ~/hafiportrait
      - run:
          name: Install Docker
          command: |
            sudo apt-get update
            sudo apt-get install -y docker.io
      - run:
          name: Setup SSH
          command: |
            mkdir -p ~/.ssh
            echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa
            ssh-keyscan -H $SERVER_HOST >> ~/.ssh/known_hosts
      - run:
          name: Deploy to Production Server
          command: |
            echo "🚀 Deploying to production server..."
            ssh $SERVER_USER@$SERVER_HOST << 'EOF'
              cd /home/ubuntu/hafiportrait
              git pull origin main
              sudo docker-compose down hafiportrait-prod socketio-prod
              sudo docker-compose build hafiportrait-prod socketio-prod
              sudo docker-compose up -d hafiportrait-prod socketio-prod
              echo "✅ Production deployment completed!"
            EOF
      - run:
          name: Health Check
          command: |
            echo "🔍 Checking production health..."
            sleep 30
            curl -f https://hafiportrait.photography/api/health || echo "⚠️ Health check failed"
            echo "✅ Deployment verification completed"

  # Job untuk build notification
  build-notification:
    docker:
      - image: cimg/base:stable
    steps:
      - run:
          name: Send build notification
          command: |
            echo "📢 Sending deployment completion notification..."
            echo "✅ Production deployment completed successfully"
            echo "🌐 Website: https://hafiportrait.photography"

# Workflows definition
workflows:
  version: 2
  
  # Main CI/CD workflow
  build-test-deploy:
    jobs:
      # Testing phase
      - test:
          filters:
            branches:
              only: /.*/
      
      # Build phase (hanya untuk main/master branch)
      - build:
          requires:
            - test
          filters:
            branches:
              only:
                - main
                - master
      
      # Build verification phase (hanya untuk main/master branch)
      - verify-build:
          requires:
            - build
          filters:
            branches:
              only:
                - main
                - master
      
      # Build notification
      - build-notification:
          requires:
            - verify-build
          filters:
            branches:
              only:
                - main
                - master

  # Nightly health check workflow (local servers only)
  nightly-health-check:
    triggers:
      - schedule:
          cron: "0 2 * * *" # Setiap hari jam 2 pagi
          filters:
            branches:
              only:
                - main
                - master
    jobs:
      - local-health-check