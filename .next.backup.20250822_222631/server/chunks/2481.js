"use strict";exports.id=2481,exports.ids=[2481],exports.modules={25560:(e,t,i)=>{let{S3Client:a,PutObjectCommand:o,DeleteObjectCommand:l,GetObjectCommand:s,ListObjectsV2Command:r}=i(21841),{getSignedUrl:n}=i(17851);class c{constructor(e={}){this.config={accountId:process.env.CLOUDFLARE_R2_ACCOUNT_ID,accessKeyId:process.env.CLOUDFLARE_R2_ACCESS_KEY_ID,secretAccessKey:process.env.CLOUDFLARE_R2_SECRET_ACCESS_KEY,bucketName:process.env.CLOUDFLARE_R2_BUCKET_NAME||"hafiportrait-photos",customDomain:process.env.CLOUDFLARE_R2_CUSTOM_DOMAIN,maxFileSize:e.maxFileSize||52428800,allowedTypes:e.allowedTypes||["image/jpeg","image/png","image/webp"],multipartThreshold:26214400,partSize:10485760,...e},this.s3Client=null,this.isInitialized=!1,this.endpoint=`https://${this.config.accountId}.r2.cloudflarestorage.com`}async initialize(){try{if(!this.config.accountId||!this.config.accessKeyId||!this.config.secretAccessKey)throw Error("Missing Cloudflare R2 credentials");return this.s3Client=new a({region:"us-east-1",endpoint:this.endpoint,credentials:{accessKeyId:this.config.accessKeyId,secretAccessKey:this.config.secretAccessKey},forcePathStyle:!0,signatureVersion:"v4"}),this.isInitialized=!0,console.log("‚úÖ Cloudflare R2 client initialized"),!0}catch(e){return console.error("‚ùå Cloudflare R2 initialization failed:",e.message),!1}}async uploadPhoto(e,t,i={}){this.isInitialized||await this.initialize();try{let a=this.generateFilePath(t,i),l={Bucket:this.config.bucketName,Key:a,Body:e,ContentType:this.detectContentType(t),Metadata:{"event-id":i.eventId||"unknown","album-name":i.albumName||"default",uploader:i.uploaderName||"system","upload-timestamp":new Date().toISOString()}};l.CacheControl="public, max-age=31536000";let s=new o(l),r=await this.s3Client.send(s),n=this.generatePublicUrl(a);return console.log(`‚úÖ Uploaded to Cloudflare R2: ${a}`),{url:n,path:a,size:e.length,storage:"cloudflare-r2",etag:r.ETag,bucket:this.config.bucketName}}catch(e){throw console.error("‚ùå Failed to upload to Cloudflare R2:",e),e}}generateFilePath(e,t){let{eventId:i,albumName:a,fileType:o}=t,l=Date.now(),s=Math.random().toString(36).substring(2,8),r=e.replace(/[^a-zA-Z0-9.-]/g,"_"),n=r.split(".").pop(),c=r.replace(/\.[^/.]+$/,""),d=`${l}_${s}_${c}.${n}`;return i&&a?`events/${i}/${a}/${d}`:i?`events/${i}/${d}`:"homepage"===o?`homepage/${d}`:`uploads/${d}`}generatePublicUrl(e){return this.config.customDomain?`https://${this.config.customDomain}/${e}`:process.env.CLOUDFLARE_R2_PUBLIC_URL?`${process.env.CLOUDFLARE_R2_PUBLIC_URL}/${e}`:`https://pub-${this.config.accountId}.r2.dev/${e}`}detectContentType(e){return({jpg:"image/jpeg",jpeg:"image/jpeg",png:"image/png",webp:"image/webp",gif:"image/gif"})[e.split(".").pop().toLowerCase()]||"application/octet-stream"}async deleteFile(e){this.isInitialized||await this.initialize();try{let t={Bucket:this.config.bucketName,Key:e},i=new l(t);return await this.s3Client.send(i),console.log(`‚úÖ Deleted from Cloudflare R2: ${e}`),!0}catch(e){return console.error("‚ùå Failed to delete from Cloudflare R2:",e),!1}}async listFiles(e="",t=100){this.isInitialized||await this.initialize();try{let i={Bucket:this.config.bucketName,Prefix:e,MaxKeys:t},a=new r(i),o=await this.s3Client.send(a);return o.Contents?.map(e=>({key:e.Key,size:e.Size,lastModified:e.LastModified,etag:e.ETag,url:this.generatePublicUrl(e.Key)}))||[]}catch(e){return console.error("‚ùå Failed to list files from Cloudflare R2:",e),[]}}async getStorageInfo(){try{let e=await this.listFiles("",1e3),t=e.reduce((e,t)=>e+(t.size||0),0),i=e.length,a=10737418240-t;return{used:t,limit:10737418240,available:a,fileCount:i,usedGB:(t/1073741824).toFixed(2),limitGB:"10.00",availableGB:(a/1073741824).toFixed(2),usagePercent:(t/10737418240*100).toFixed(1)}}catch(e){return console.error("‚ùå Failed to get storage info:",e),null}}async generatePresignedUploadUrl(e,t=3600){this.isInitialized||await this.initialize();try{let i=new o({Bucket:this.config.bucketName,Key:e});return await n(this.s3Client,i,{expiresIn:t})}catch(e){throw console.error("‚ùå Failed to generate presigned URL:",e),e}}async downloadPhoto(e){this.isInitialized||await this.initialize();try{let t={Bucket:this.config.bucketName,Key:e},i=new s(t),a=await this.s3Client.send(i),o=[];for await(let e of a.Body)o.push(e);return Buffer.concat(o)}catch(t){throw console.error(`‚ùå Failed to download photo ${e}:`,t),t}}async testConnection(){try{this.isInitialized||await this.initialize(),await this.listFiles("",1),console.log("‚úÖ Cloudflare R2 connection test successful"),console.log(`   Bucket: ${this.config.bucketName}`),console.log(`   Endpoint: ${this.endpoint}`);let e=await this.getStorageInfo();return e&&(console.log(`   Storage: ${e.usedGB}GB / ${e.limitGB}GB (${e.usagePercent}% used)`),console.log(`   Files: ${e.fileCount} files`)),!0}catch(e){return console.error("‚ùå Cloudflare R2 connection test failed:",e),!1}}async batchUpload(e,t={}){let i=[],a=[];for(let o of e)try{let e=await this.uploadPhoto(o.buffer,o.name,{...t,originalName:o.originalName});i.push(e)}catch(e){a.push({file:o.name,error:e.message})}return{successful:i,failed:a,totalProcessed:e.length,successCount:i.length,errorCount:a.length}}}e.exports=c},80355:e=>{e.exports=function(){return{async compressImage(e,t){console.log("‚ö†Ô∏è Using enhanced fallback compression (Sharp not available)"),console.log(`üìä Original size: ${(e.size/1024).toFixed(2)} KB`);try{return await this.basicCompress(e,t)}catch(i){return console.warn("‚ö†Ô∏è Fallback compression failed:",i.message),this.basicSizeLimit(e,t)}},async canvasCompress(e,t){return new Promise((i,a)=>{let o=document.createElement("canvas"),l=o.getContext("2d"),s=new Image;s.onload=()=>{let{width:r,height:n}=this.calculateDimensions(s.width,s.height,t.maxWidth||2e3);o.width=r,o.height=n,l.drawImage(s,0,0,r,n),o.toBlob(t=>{if(t){let a=new FileReader;a.onload=()=>{let t=Buffer.from(a.result);console.log(`‚úÖ Canvas compression: ${e.size} ‚Üí ${t.length} bytes`),i({buffer:t,size:t.length,name:e.name.replace(/\.[^/.]+$/,".jpg")})},a.readAsArrayBuffer(t)}else a(Error("Canvas compression failed"))},"image/jpeg",t.quality||.85)},s.onerror=()=>a(Error("Image load failed"));let r=new Blob([e.buffer],{type:e.type});s.src=URL.createObjectURL(r)})},basicCompress:async(e,t)=>(console.log("\uD83D\uDD04 Using basic server-side compression fallback"),e.size>5242880&&console.warn(`‚ö†Ô∏è File too large (${(e.size/1024/1024).toFixed(2)}MB), may cause issues`),{buffer:e.buffer,size:e.size,name:e.name.replace(/\.[^/.]+$/,".jpg"),warning:e.size>5242880?"File size exceeds recommended limit":null}),basicSizeLimit(e,t){if(e.size>10485760)throw Error(`File too large: ${(e.size/1024/1024).toFixed(2)}MB (max: 10MB)`);return{buffer:e.buffer,size:e.size,name:e.name.replace(/\.[^/.]+$/,".jpg")}},calculateDimensions:(e,t,i)=>e<=i?{width:e,height:t}:{width:i,height:Math.round(i/e*t)}}}},12609:(e,t,i)=>{let{google:a}=i(7026),o=i(92048).promises;i(55315);class l{constructor(e={}){this.config={clientId:process.env.GOOGLE_DRIVE_CLIENT_ID,clientSecret:process.env.GOOGLE_DRIVE_CLIENT_SECRET,redirectUri:process.env.GOOGLE_DRIVE_REDIRECT_URI||"http://localhost:3000/auth/google/callback",rootFolderId:process.env.GOOGLE_DRIVE_ROOT_FOLDER_ID,folderStructure:e.folderStructure||"event-based",maxFileSize:e.maxFileSize||52428800,allowedTypes:e.allowedTypes||["image/jpeg","image/png","image/webp"],...e},this.drive=null,this.auth=null,this.isInitialized=!1}async initialize(){try{if(!this.config.clientId||!this.config.clientSecret)throw Error("Google Drive credentials not configured. Please set GOOGLE_DRIVE_CLIENT_ID and GOOGLE_DRIVE_CLIENT_SECRET in .env.local");this.auth=new a.auth.OAuth2(this.config.clientId,this.config.clientSecret,this.config.redirectUri);try{await this.loadTokens()}catch(e){console.log("‚ö†Ô∏è No saved tokens found, authentication will be required")}return this.drive=a.drive({version:"v3",auth:this.auth}),this.isInitialized=!0,console.log("‚úÖ Google Drive API initialized"),!0}catch(e){return console.error("‚ùå Google Drive initialization failed:",e.message),!1}}async loadTokens(){try{let e=process.env.GOOGLE_DRIVE_REFRESH_TOKEN;if(e){console.log("‚úÖ Using refresh token from environment"),this.auth.setCredentials({refresh_token:e});return}let t=await o.readFile("./google-drive-tokens.json","utf8"),i=JSON.parse(t);this.auth.setCredentials(i),console.log("‚úÖ Google Drive tokens loaded from file")}catch(e){throw console.log("‚ö†Ô∏è No saved tokens found, authentication required"),Error("Authentication required. Run: node storage-optimization-cli.js auth")}}async saveTokens(e){try{await o.writeFile("./google-drive-tokens.json",JSON.stringify(e,null,2)),console.log("‚úÖ Google Drive tokens saved")}catch(e){console.error("‚ùå Failed to save tokens:",e)}}getAuthUrl(){return this.auth.generateAuthUrl({access_type:"offline",scope:["https://www.googleapis.com/auth/drive.file"],prompt:"consent"})}async authenticate(e){try{let{tokens:t}=await this.auth.getToken(e);return this.auth.setCredentials(t),await this.saveTokens(t),console.log("‚úÖ Google Drive authentication completed"),!0}catch(e){return console.error("‚ùå Authentication failed:",e),!1}}async createEventFolder(e,t){this.isInitialized||await this.initialize();try{let i={name:`${t} (${e})`,mimeType:"application/vnd.google-apps.folder",parents:this.config.rootFolderId?[this.config.rootFolderId]:void 0},a=await this.drive.files.create({resource:i,fields:"id, name, webViewLink"}),o={};for(let e of["Official","Tamu","Bridesmaid","RAW","Thumbnails"]){let t={name:e,mimeType:"application/vnd.google-apps.folder",parents:[a.data.id]},i=await this.drive.files.create({resource:t,fields:"id, name"});o[e]=i.data.id}return console.log(`‚úÖ Created Google Drive folder: ${a.data.name}`),{folderId:a.data.id,folderName:a.data.name,webViewLink:a.data.webViewLink,subfolders:o}}catch(e){throw console.error("‚ùå Failed to create event folder:",e),e}}async uploadPhoto(e,t,a={}){this.isInitialized||await this.initialize();try{let o=await this.getTargetFolderId(a),l={name:t,parents:o?[o]:void 0,description:`Uploaded from DSLR system - Event: ${a.eventId||"Unknown"}`},s={mimeType:"image/jpeg",body:i(76162).Readable.from(e)},r=await this.drive.files.create({resource:l,media:s,fields:"id, name, size, webViewLink, webContentLink"});return a.makePublic&&await this.drive.permissions.create({fileId:r.data.id,resource:{role:"reader",type:"anyone"}}),console.log(`‚úÖ Uploaded to Google Drive: ${t}`),{fileId:r.data.id,fileName:r.data.name,size:r.data.size,webViewLink:r.data.webViewLink,webContentLink:r.data.webContentLink,publicUrl:a.makePublic?`https://drive.google.com/uc?id=${r.data.id}`:null}}catch(e){throw console.error("‚ùå Failed to upload to Google Drive:",e),e}}async getTargetFolderId(e){let{eventId:t,albumName:i,fileType:a}=e;return this.config.rootFolderId}async getStorageInfo(){this.isInitialized||await this.initialize();try{let e=(await this.drive.about.get({fields:"storageQuota, user"})).data.storageQuota,t=parseInt(e.usage||0),i=parseInt(e.limit||16106127360),a=i-t;return{used:t,limit:i,available:a,usedGB:(t/1073741824).toFixed(2),limitGB:(i/1073741824).toFixed(2),availableGB:(a/1073741824).toFixed(2),usagePercent:(t/i*100).toFixed(1)}}catch(e){return console.error("‚ùå Failed to get storage info:",e),null}}async listFiles(e,t={}){this.isInitialized||await this.initialize();try{let i=e?`'${e}' in parents`:void 0;return(await this.drive.files.list({q:i,pageSize:t.pageSize||100,fields:"files(id, name, size, createdTime, webViewLink, thumbnailLink)",orderBy:t.orderBy||"createdTime desc"})).data.files}catch(e){return console.error("‚ùå Failed to list files:",e),[]}}async deleteFile(e){this.isInitialized||await this.initialize();try{return await this.drive.files.delete({fileId:e}),console.log(`‚úÖ Deleted file from Google Drive: ${e}`),!0}catch(e){return console.error("‚ùå Failed to delete file:",e),!1}}async createFolder(e,t=null){this.isInitialized||await this.initialize();try{let i={name:e,mimeType:"application/vnd.google-apps.folder",parents:t?[t]:this.config.rootFolderId?[this.config.rootFolderId]:void 0},a=await this.drive.files.create({resource:i,fields:"id, name, webViewLink"});return console.log(`‚úÖ Created Google Drive folder: ${e}`),{id:a.data.id,name:a.data.name,webViewLink:a.data.webViewLink}}catch(t){throw console.error(`‚ùå Failed to create folder ${e}:`,t),t}}async uploadToFolder(e,t,a,o={}){this.isInitialized||await this.initialize();try{let l={name:t,parents:[a],description:o.description||`Backup photo - ${t}`},s={mimeType:"image/jpeg",body:i(76162).Readable.from(e)},r=await this.drive.files.create({resource:l,media:s,fields:"id, name, size, webViewLink, webContentLink"});return await this.drive.permissions.create({fileId:r.data.id,resource:{role:"reader",type:"anyone"}}),console.log(`‚úÖ Uploaded to Google Drive folder: ${t}`),{fileId:r.data.id,fileName:r.data.name,size:r.data.size,webViewLink:r.data.webViewLink,webContentLink:r.data.webContentLink,publicUrl:`https://drive.google.com/uc?id=${r.data.id}`}}catch(e){throw console.error(`‚ùå Failed to upload ${t} to folder:`,e),e}}async downloadPhoto(e){this.isInitialized||await this.initialize();try{let t=await this.drive.files.get({fileId:e,alt:"media"},{responseType:"stream"}),i=[];for await(let e of t.data)i.push(e);return Buffer.concat(i)}catch(t){throw console.error(`‚ùå Failed to download photo ${e}:`,t),t}}async testConnection(){try{this.isInitialized||await this.initialize();let e=await this.drive.about.get({fields:"user, storageQuota"});console.log("‚úÖ Google Drive connection test successful"),console.log(`   User: ${e.data.user.displayName}`),console.log(`   Email: ${e.data.user.emailAddress}`);let t=await this.getStorageInfo();return t&&console.log(`   Storage: ${t.usedGB}GB / ${t.limitGB}GB (${t.usagePercent}% used)`),!0}catch(e){return console.error("‚ùå Google Drive connection test failed:",e),!1}}}e.exports=l},82481:(e,t,i)=>{let a=i(92048).promises,o=i(55315);class l{constructor(e={}){this.config={cloudflareR2:{maxSizeGB:8,priority:"high",types:["premium","homepage","featured","standard"]},googleDrive:{maxSizeGB:12,priority:"medium",types:["backup","archive","overflow"]},local:{maxSizeGB:50,priority:"low",types:["raw","local-backup","emergency"]},compression:{premium:{quality:.95,maxWidth:4e3},standard:{quality:.85,maxWidth:2e3},thumbnail:{quality:.75,maxWidth:800}},...e},this.storageStats={cloudflareR2:{used:0,available:1073741824*this.config.cloudflareR2.maxSizeGB},googleDrive:{used:0,available:1073741824*this.config.googleDrive.maxSizeGB},local:{used:0,available:1073741824*this.config.local.maxSizeGB}},this.cloudflareR2=null,this.googleDrive=null}async initializeProviders(){try{let e=i(25560);this.cloudflareR2=new e,await this.cloudflareR2.initialize();let t=i(12609);this.googleDrive=new t,await this.googleDrive.initialize(),console.log("‚úÖ Storage providers initialized")}catch(e){console.error("‚ùå Failed to initialize storage providers:",e)}}async determineStorageTier(e){let{isHomepage:t,isPremium:i,isFeatured:a,fileSize:o,eventType:l,albumName:s,fileType:r}=e,n=!!(process.env.CLOUDFLARE_R2_ACCOUNT_ID&&process.env.CLOUDFLARE_R2_ACCESS_KEY_ID&&process.env.CLOUDFLARE_R2_SECRET_ACCESS_KEY&&process.env.CLOUDFLARE_R2_BUCKET_NAME);return n&&this.hasSpace("cloudflareR2",o)?(console.log("\uD83C\uDFAF Selecting Cloudflare R2 as primary tier"),{tier:"cloudflareR2",compression:t||i||a?"premium":"standard",priority:"high"}):(n?console.warn("‚ö†Ô∏è Cloudflare R2 credentials available but no space"):console.warn("‚ö†Ô∏è Cloudflare R2 credentials not available"),this.hasSpace("googleDrive",o))?{tier:"googleDrive",compression:"standard",priority:"medium"}:{tier:"local",compression:"standard",priority:"low"}}hasSpace(e,t){let i=this.storageStats[e],a=i.used+t<=i.available;return console.log(`üìä Space check for ${e}:`),console.log(`   Used: ${(i.used/1024/1024).toFixed(2)} MB`),console.log(`   Available: ${(i.available/1024/1024).toFixed(2)} MB`),console.log(`   File size: ${(t/1024).toFixed(2)} KB`),console.log(`   Has space: ${a?"‚úÖ Yes":"‚ùå No"}`),a}async uploadPhoto(e,t){let i=await this.determineStorageTier(t);try{let a;switch(console.log(`üéØ Attempting upload to tier: ${i.tier}`),i.tier){case"cloudflareR2":a=await this.uploadToCloudflareR2(e,t,i),console.log(`‚úÖ Successfully uploaded to Cloudflare R2: ${a.path}`);break;case"googleDrive":a=await this.uploadToGoogleDrive(e,t,i),console.log(`‚úÖ Successfully uploaded to Google Drive: ${a.path}`);break;case"local":a=await this.uploadToLocal(e,t,i),console.log(`‚úÖ Successfully uploaded to local: ${a.path}`)}this.updateStorageStats(i.tier,e.size);let o=null;if("cloudflareR2"===i.tier||"googleDrive"===i.tier)try{o=await this.createThumbnail(e,t)}catch(e){console.warn("‚ö†Ô∏è Thumbnail creation failed:",e.message)}return{...a,tier:i.tier,thumbnailUrl:o,compressionUsed:i.compression}}catch(a){return console.error(`‚ùå Upload failed for tier ${i.tier}:`,a),await this.uploadWithFallback(e,t,i.tier)}}async uploadToCloudflareR2(e,t,i){this.cloudflareR2||await this.initializeProviders();let a=await this.compressImage(e,i.compression),o=await this.cloudflareR2.uploadPhoto(a.buffer,a.name,{eventId:t.eventId,albumName:t.albumName,uploaderName:t.uploaderName,fileType:t.isHomepage?"homepage":"event"});return console.log(`‚úÖ Uploaded to Cloudflare R2: ${o.path}`),{url:o.url,path:o.path,size:a.size,storage:"cloudflare-r2",etag:o.etag}}async uploadToGoogleDrive(e,t,i){this.googleDrive||await this.initializeProviders();let a=await this.compressImage(e,i.compression),o=await this.googleDrive.uploadPhoto(a.buffer,a.name,{eventId:t.eventId,albumName:t.albumName,uploaderName:t.uploaderName,makePublic:!0});return console.log(`‚úÖ Uploaded to Google Drive: ${o.fileName}`),{url:o.publicUrl||o.webViewLink,path:o.fileId,size:a.size,storage:"google-drive",fileId:o.fileId}}async uploadToLocal(e,t,i){let l=o.join(this.config.local.backupFolder||"./dslr-backup",t.eventId||"default",`${Date.now()}_${e.name}`);await a.mkdir(o.dirname(l),{recursive:!0});let s=await this.compressImage(e,i.compression);return await a.writeFile(l,s.buffer),console.log(`‚úÖ Saved to local: ${l}`),{url:`file://${l}`,path:l,size:s.size,storage:"local"}}async compressImage(e,t){let a=this.config.compression[t];try{let o=i(57441);console.log(`üéØ Compressing with Sharp: ${t} (quality: ${Math.round(100*a.quality)}%, maxWidth: ${a.maxWidth}px)`);let l=await o(e.buffer).resize(a.maxWidth,null,{withoutEnlargement:!0,fit:"inside"}).jpeg({quality:Math.round(100*a.quality),progressive:!0,mozjpeg:!0}).toBuffer(),s=((e.size-l.length)/e.size*100).toFixed(1);return console.log(`‚úÖ Compression successful: ${e.size} ‚Üí ${l.length} bytes (${s}% reduction)`),{...e,buffer:l,size:l.length,name:e.name.replace(/\.[^/.]+$/,".jpg"),compressionRatio:parseFloat(s)}}catch(o){console.warn("‚ö†Ô∏è Sharp not available, using fallback compression:",o.message);try{let o=i(80355)();return console.log(`üîÑ Using fallback compression for ${t}`),{...await o.compressImage(e,a),compressionRatio:0}}catch(t){return console.warn("‚ö†Ô∏è Fallback compression also failed:",t.message),{...e,buffer:e.buffer,size:e.size,name:e.name.replace(/\.[^/.]+$/,".jpg"),compressionRatio:0}}}}async createThumbnail(e,t){try{let a=i(57441),o=await a(e.buffer).resize(400,300,{fit:"cover",position:"center"}).jpeg({quality:75}).toBuffer();this.cloudflareR2||await this.initializeProviders();let l=`thumb_${e.name}`;return(await this.cloudflareR2.uploadPhoto(o,l,{eventId:t.eventId,albumName:"thumbnails",uploaderName:t.uploaderName,fileType:"thumbnail"})).url}catch(e){return console.warn("‚ö†Ô∏è Thumbnail creation failed:",e.message),null}}async uploadWithFallback(e,t,i){let a=["cloudflareR2","googleDrive","local"],o=a.indexOf(i)+1;for(let i=o;i<a.length;i++){let o=a[i];try{let i={tier:o,compression:"standard",priority:"fallback"};if("cloudflareR2"===o)return await this.uploadToCloudflareR2(e,t,i);if("googleDrive"===o)return await this.uploadToGoogleDrive(e,t,i);return await this.uploadToLocal(e,t,i)}catch(e){console.warn(`‚ö†Ô∏è Fallback to ${o} failed:`,e.message);continue}}throw Error("All storage tiers failed")}updateStorageStats(e,t){this.storageStats[e].used+=t}getStorageReport(){let e={};return Object.keys(this.storageStats).forEach(t=>{let i=this.storageStats[t],a=(i.used/1073741824).toFixed(2),o=(i.available/1073741824).toFixed(2),l=(i.used/i.available*100).toFixed(1);e[t]={used:`${a} GB`,available:`${o} GB`,usage:`${l}%`,status:l>90?"\uD83D\uDD34 Critical":l>70?"\uD83D\uDFE1 Warning":"\uD83D\uDFE2 Good"}}),e}async cleanupOldFiles(e=30){let t=new Date;t.setDate(t.getDate()-e);let i=this.config.local.backupFolder||"./dslr-backup";try{let e=await a.readdir(i,{recursive:!0}),l=0;for(let s of e){let e=o.join(i,s);(await a.stat(e)).mtime<t&&(await a.unlink(e),l++)}console.log(`üßπ Cleaned up ${l} old files`)}catch(e){console.error("‚ùå Cleanup failed:",e)}}}e.exports=l}};