"use strict";(()=>{var e={};e.id=9047,e.ids=[9047],e.modules={20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},57441:e=>{e.exports=require("sharp")},32615:e=>{e.exports=require("http")},35240:e=>{e.exports=require("https")},68621:e=>{e.exports=require("punycode")},76162:e=>{e.exports=require("stream")},17360:e=>{e.exports=require("url")},71568:e=>{e.exports=require("zlib")},29197:(e,s,t)=>{t.r(s),t.d(s,{originalPathname:()=>x,patchFetch:()=>y,requestAsyncStorage:()=>l,routeModule:()=>d,serverHooks:()=>m,staticGenerationAsyncStorage:()=>g});var a={};t.r(a),t.d(a,{PATCH:()=>c,POST:()=>p});var r=t(30633),o=t(86488),n=t(13342),i=t(90223),u=t(68620);async function p(e,{params:s}){try{let{messageId:t}=await s,{reactionType:a}=await e.json();if(!["love","laugh","wow","sad","angry"].includes(a))return i.NextResponse.json({message:"Invalid reaction type. Valid types: love, laugh, wow, sad, angry"},{status:400});await u.F.addMessageReaction(t,a);let r=await u.F.getMessageById(t);return i.NextResponse.json({success:!0,reactions:r?.reactions,message:`${a} reaction added successfully`})}catch(e){return console.error("Add reaction error:",e),i.NextResponse.json({message:"Failed to add reaction",error:e.message},{status:500})}}async function c(e,{params:s}){try{let{messageId:t}=await s,{reactions:a}=await e.json();if(!a||"object"!=typeof a)return i.NextResponse.json({message:"Reactions must be an object"},{status:400});let r=["love","laugh","wow","sad","angry"];for(let e of Object.keys(a)){if(!r.includes(e))return i.NextResponse.json({message:`Invalid reaction type: ${e}`},{status:400});if("number"!=typeof a[e]||a[e]<0)return i.NextResponse.json({message:`Reaction ${e} must be a non-negative number`},{status:400})}return await u.F.updateMessageReactions(t,a),i.NextResponse.json({success:!0,message:"Reactions updated successfully"})}catch(e){return console.error("Update reactions error:",e),i.NextResponse.json({message:"Failed to update reactions",error:e.message},{status:500})}}let d=new r.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/messages/[messageId]/reactions/route",pathname:"/api/messages/[messageId]/reactions",filename:"route",bundlePath:"app/api/messages/[messageId]/reactions/route"},resolvedPagePath:"/home/ubuntu/stable/src/app/api/messages/[messageId]/reactions/route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:l,staticGenerationAsyncStorage:g,serverHooks:m}=d,x="/api/messages/[messageId]/reactions/route";function y(){return(0,n.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:g})}}};var s=require("../../../../../webpack-runtime.js");s.C(e);var t=e=>s(s.s=e),a=s.X(0,[2782,606,3716,8620],()=>t(29197));module.exports=a})();