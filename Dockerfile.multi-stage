# Multi-Stage Docker untuk HafiPortrait
# Stage 1: Development
# Stage 2: Production

# ================================
# STAGE 1: Development Environment
# ================================
FROM node:18-alpine AS development

# Set working directory
WORKDIR /app

# Install pnpm
RUN npm install -g pnpm

# Copy package files
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./

# Install dependencies (including dev dependencies)
RUN pnpm install --frozen-lockfile

# Copy source code
COPY . .

# Expose development ports
EXPOSE 4000 4001

# Development command (hot reload)
CMD ["pnpm", "run", "dev:public"]

# ================================
# STAGE 2: Build Stage
# ================================
FROM node:18-alpine AS builder

WORKDIR /app

# Install pnpm
RUN npm install -g pnpm

# Copy package files
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./

# Install dependencies
RUN pnpm install --frozen-lockfile

# Copy source code
COPY . .

# Build application
RUN pnpm build

# ================================
# STAGE 3: Production Environment
# ================================
FROM node:18-alpine AS production

WORKDIR /app

# Install pnpm
RUN npm install -g pnpm

# Copy package files
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./

# Install only production dependencies
RUN pnpm install --frozen-lockfile --prod

# Copy built application from builder stage
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/public ./public
COPY --from=builder /app/next.config.js ./
COPY --from=builder /app/src ./src

# Copy other necessary files
COPY socketio-server.js ./
COPY scripts ./scripts

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nextjs -u 1001

# Change ownership
RUN chown -R nextjs:nodejs /app
USER nextjs

# Expose production ports
EXPOSE 3000 3001

# Production command
CMD ["pnpm", "start"]

# ================================
# STAGE 4: Development with Hot Reload (Optional)
# ================================
FROM development AS dev-hot

# Hot reload command (nodemon sudah ada di dependencies)
CMD ["pnpm", "run", "dev:public"]