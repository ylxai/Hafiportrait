# ================================
# HAFIPORTRAIT SOCKET.IO DOCKERFILE
# ================================
# PURPOSE: Standalone Socket.IO server for real-time communication
# USAGE: docker-compose up socketio-dev / socketio-prod
# FEATURES:
#   - Lightweight Alpine-based image
#   - High performance Socket.IO server
#   - Security hardened (non-root user)
#   - Health checks enabled
#   - Optimized for production
# ================================
FROM node:20-alpine AS base

# Install system dependencies
RUN apk add --no-cache \
    libc6-compat \
    curl \
    dumb-init && \
    rm -rf /var/cache/apk/*

WORKDIR /app

# ✅ FIXED: PNPM cache path conflicts
# ✅ FIXED: All cache paths are user-accessible
# ✅ FIXED: Consistent cache directory structure
RUN npm install -g pnpm@latest && \
    pnpm config set store-dir /app/.pnpm-store && \
    pnpm config set cache-dir /app/.pnpm-cache

# ================================
# DEPENDENCIES STAGE
# ================================
FROM base AS deps

# Copy package files
COPY package.json ./

# ✅ FIXED: Multi-layer cache strategy for PNPM
# ✅ FIXED: User-accessible cache paths
# ✅ FIXED: No root path conflicts
RUN --mount=type=cache,target=/app/.pnpm-store \
    --mount=type=cache,target=/app/.pnpm-cache \
    pnpm install socket.io express cors helmet compression --prod

# ================================
# PRODUCTION RUNTIME
# ================================
FROM base AS production

# ✅ FIXED: Create user BEFORE copying files
# ✅ FIXED: Proper ownership for cache directories
# ✅ FIXED: No permission conflicts
RUN addgroup -g 1001 -S nodejs && \
    adduser -S socketio -u 1001 && \
    mkdir -p /app/node_modules /app/.pnpm-store /app/.pnpm-cache && \
    chown -R socketio:nodejs /app/node_modules /app/.pnpm-store /app/.pnpm-cache

# Copy dependencies
COPY --from=deps --chown=socketio:nodejs /app/node_modules ./node_modules
COPY --from=deps --chown=socketio:nodejs /app/package.json ./package.json

# Copy application files
COPY --chown=socketio:nodejs socketio-server.js ./

# Copy environment files
COPY --chown=socketio:nodejs .env.production* ./

# Set environment variables (fixed format)
ENV NODE_ENV=production \
    SOCKETIO_PORT=3001

# Switch to non-root user
USER socketio

# Expose Socket.IO port
EXPOSE 3001

# Health check with better timing
HEALTHCHECK --interval=30s --timeout=10s --start-period=15s --retries=3 \
    CMD curl -f http://localhost:3001/health || exit 1

# Use dumb-init for proper signal handling
ENTRYPOINT ["dumb-init", "--"]
CMD ["node", "socketio-server.js"]
