# ================================
# HAFIPORTRAIT SOCKET.IO - OPTIMIZED
# Lightweight & High Performance
# ================================
FROM node:20-alpine AS base

# Install system dependencies
RUN apk add --no-cache \
    libc6-compat=1.2.4-r4 \
    curl=8.5.0-r0 \
    dumb-init=1.2.5-r1 && \
    rm -rf /var/cache/apk/*

WORKDIR /app

# Install pnpm with caching
RUN npm install -g pnpm@latest && \
    pnpm config set store-dir /root/.pnpm-store

# ================================
# DEPENDENCIES STAGE
# ================================
FROM base AS deps

# Copy package files
COPY package.json ./

# Install minimal dependencies with cache
RUN --mount=type=cache,target=/root/.pnpm-store \
    pnpm install socket.io express cors helmet compression --prod

# ================================
# PRODUCTION RUNTIME
# ================================
FROM base AS production

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S socketio -u 1001

# Copy dependencies
COPY --from=deps --chown=socketio:nodejs /app/node_modules ./node_modules
COPY --from=deps --chown=socketio:nodejs /app/package.json ./package.json

# Copy application files
COPY --chown=socketio:nodejs socketio-server.js ./

# Copy environment files
COPY --chown=socketio:nodejs .env.production* ./

# Set environment variables (fixed format)
ENV NODE_ENV=production \
    SOCKETIO_PORT=3001

# Switch to non-root user
USER socketio

# Expose Socket.IO port
EXPOSE 3001

# Health check with better timing
HEALTHCHECK --interval=30s --timeout=10s --start-period=15s --retries=3 \
    CMD curl -f http://localhost:3001/health || exit 1

# Use dumb-init for proper signal handling
ENTRYPOINT ["dumb-init", "--"]
CMD ["node", "socketio-server.js"]