# ================================
# HAFIPORTRAIT DEVELOPMENT DOCKERFILE
# ================================
# PURPOSE: Development environment with hot reload
# USAGE: docker-compose up hafiportrait-dev
# FEATURES: 
#   - Hot reload enabled
#   - Development environment variables
#   - Optimized for fast development
#   - Multi-layer cache strategy
#   - User security (non-root)
# ================================
FROM node:20-alpine AS base

# Install system dependencies
RUN apk add --no-cache \
    libc6-compat=1.2.4-r4 \
    curl=8.5.0-r0 \
    git=2.43.0-r0

# Set working directory
WORKDIR /app

# ✅ FIXED: PNPM cache path conflicts
# ✅ FIXED: All cache paths are user-accessible
# ✅ FIXED: Consistent cache directory structure
RUN npm install -g pnpm@latest && \
    pnpm config set store-dir /app/.pnpm-store && \
    pnpm config set cache-dir /app/.pnpm-cache

# ================================
# DEPENDENCIES LAYER (Cached)
# ================================
FROM base AS deps

# Copy package files for dependency installation
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./

# ✅ FIXED: Multi-layer cache strategy for PNPM
# ✅ FIXED: User-accessible cache paths
# ✅ FIXED: No root path conflicts
RUN --mount=type=cache,target=/app/.pnpm-store \
    --mount=type=cache,target=/app/.pnpm-cache \
    pnpm install --frozen-lockfile

# ================================
# DEVELOPMENT ENVIRONMENT
# ================================
FROM base AS development

# Copy dependencies from deps layer
COPY --from=deps /app/node_modules ./node_modules
COPY --from=deps /app/package.json ./package.json

# Copy environment files for development
COPY .env.dev.public* ./
COPY .env.local* ./
COPY .env.example ./

# ✅ FIXED: Create user BEFORE copying files
# ✅ FIXED: Proper ownership for cache directories
# ✅ FIXED: No permission conflicts
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nextjs -u 1001 && \
    mkdir -p /app/.next /app/node_modules /app/.pnpm-store /app/.pnpm-cache && \
    chown -R nextjs:nodejs /app/.next /app/node_modules /app/.pnpm-store /app/.pnpm-cache

# Copy source code with proper ownership from start
COPY --chown=nextjs:nodejs . .

# Set development environment variables from .env.dev.public (fixed format)
ENV NODE_ENV=development \
    NEXT_PUBLIC_ENV_MODE=development \
    NEXT_PUBLIC_APP_URL=http://147.251.255.227:3002 \
    PORT=3002 \
    HOST=0.0.0.0 \
    NEXT_TELEMETRY_DISABLED=1 \
    NEXT_PUBLIC_DEBUG_MODE=true \
    NEXT_PUBLIC_SHOW_ENV_INFO=true \
    NEXT_PUBLIC_DEV_IP=147.251.255.227 \
    NEXT_PUBLIC_SOCKETIO_URL=http://147.251.255.227:3003 \
    SOCKETIO_PORT=3003 \
    WS_PORT=3003 \
    ENABLE_WEBSOCKET=true \
    ENABLE_REAL_TIME_UPDATES=true \
    ENABLE_SOCKETIO_ROOMS=true

USER nextjs

# Expose development ports
EXPOSE 3002 3003

# Health check for development
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:3002/api/health || exit 1

# Development command with hot reload
CMD ["pnpm", "run", "dev:docker"]